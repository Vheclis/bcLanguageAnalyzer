/* Generated By:JavaCC: Do not edit this line. ParserBCConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserBCConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTARIO_LINHA = 6;
  /** RegularExpression Id. */
  int SEPARADOR = 10;
  /** RegularExpression Id. */
  int DEFINICAO = 11;
  /** RegularExpression Id. */
  int ABRE_CHAVES = 12;
  /** RegularExpression Id. */
  int FECHA_CHAVES = 13;
  /** RegularExpression Id. */
  int ABRE_PARENTESES = 14;
  /** RegularExpression Id. */
  int FECHA_PARENTESES = 15;
  /** RegularExpression Id. */
  int IGUAL = 16;
  /** RegularExpression Id. */
  int ASPAS_DUPLAS = 17;
  /** RegularExpression Id. */
  int OU_LOGICO = 18;
  /** RegularExpression Id. */
  int EXRESSAO = 19;
  /** RegularExpression Id. */
  int E_LOGICO = 20;
  /** RegularExpression Id. */
  int NEGACAO = 21;
  /** RegularExpression Id. */
  int MENOR_IGUAL = 22;
  /** RegularExpression Id. */
  int MAIOR_IGUAL = 23;
  /** RegularExpression Id. */
  int DIFERENTE = 24;
  /** RegularExpression Id. */
  int MENOR = 25;
  /** RegularExpression Id. */
  int MAIOR = 26;
  /** RegularExpression Id. */
  int ATRIBUI = 27;
  /** RegularExpression Id. */
  int ATRIBUI_SOMANDO = 28;
  /** RegularExpression Id. */
  int ATRIBUI_SUBTRAINDO = 29;
  /** RegularExpression Id. */
  int ATRIBUI_MULTIPLICANDO = 30;
  /** RegularExpression Id. */
  int ATRIBUI_DIVINDO = 31;
  /** RegularExpression Id. */
  int ATRIBUI_RESTO = 32;
  /** RegularExpression Id. */
  int ATRIBUI_POTENCIA = 33;
  /** RegularExpression Id. */
  int SOMA = 34;
  /** RegularExpression Id. */
  int SUBTRACAO = 35;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 36;
  /** RegularExpression Id. */
  int DIVISAO = 37;
  /** RegularExpression Id. */
  int RESTO = 38;
  /** RegularExpression Id. */
  int POTENCIA = 39;
  /** RegularExpression Id. */
  int INCREMENTO = 40;
  /** RegularExpression Id. */
  int DECREMENTO = 41;
  /** RegularExpression Id. */
  int PONTO = 42;
  /** RegularExpression Id. */
  int IF = 43;
  /** RegularExpression Id. */
  int WHILE = 44;
  /** RegularExpression Id. */
  int FOR = 45;
  /** RegularExpression Id. */
  int NULL = 46;
  /** RegularExpression Id. */
  int BREAK = 47;
  /** RegularExpression Id. */
  int CONTINUE = 48;
  /** RegularExpression Id. */
  int QUIT = 49;
  /** RegularExpression Id. */
  int PRINT = 50;
  /** RegularExpression Id. */
  int RAIZ_QUADRADA = 51;
  /** RegularExpression Id. */
  int TAMANHO = 52;
  /** RegularExpression Id. */
  int ESCALA = 53;
  /** RegularExpression Id. */
  int IBASE = 54;
  /** RegularExpression Id. */
  int OBASE = 55;
  /** RegularExpression Id. */
  int LAST = 56;
  /** RegularExpression Id. */
  int RETURN = 57;
  /** RegularExpression Id. */
  int ID = 58;
  /** RegularExpression Id. */
  int LETRA = 59;
  /** RegularExpression Id. */
  int DIGITO = 60;
  /** RegularExpression Id. */
  int ENDSTRING = 61;
  /** RegularExpression Id. */
  int STRING = 62;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int COMENTARIO_MULTILINHA = 1;
  /** Lexical state. */
  int ESTADO_STRING = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<COMENTARIO_LINHA>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 9>",
    "<SEPARADOR>",
    "\"define\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"==\"",
    "\"\\\"\"",
    "\"||\"",
    "<EXRESSAO>",
    "\"&&\"",
    "\"!\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"=\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"^=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"^\"",
    "\"++\"",
    "\"--\"",
    "\".\"",
    "\"if\"",
    "\"while\"",
    "\"for\"",
    "<NULL>",
    "\"break\"",
    "\"continue\"",
    "\"quit\"",
    "\"print\"",
    "\"sqrt\"",
    "\"lenght\"",
    "\"scale\"",
    "\"ibase\"",
    "\"obase\"",
    "\"last\"",
    "\"return\"",
    "<ID>",
    "<LETRA>",
    "<DIGITO>",
    "<ENDSTRING>",
    "<STRING>",
  };

}
